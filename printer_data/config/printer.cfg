[include mainsail.cfg]
[exclude_object]
[include KAMP_Settings.cfg]
[include macros.cfg]

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 10000
max_z_velocity: 10
max_z_accel: 80

[bltouch]
x_offset: -40.0
y_offset: 0
#z_offset: 0.700
pin_move_time: 0.4
speed: 20

[safe_z_home]
home_xy_position: 50,50
speed: 100
z_hop: 10
z_hop_speed: 15
move_to_previous: False

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 10, 10
mesh_max: 180, 210
probe_count: 9, 9
algorithm: bicubic
bicubic_tension: 0.2

[extruder]
pressure_advance: 0.03 # measured w/ Landu PLA
max_extrude_cross_section: 5 # to allow Adaptive Purging to work

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

# ---- Pins ----
# ==============
# ---- Pins ----
[mcu CB1]
serial: /tmp/klipper_host_mcu

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_290040000D50415833323520-if00

[adxl345]
cs_pin: PD9
spi_bus: spi1

[stepper_x]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: !PC0
position_endstop: 0
position_max: 220
homing_speed: 50

[stepper_y]
step_pin: PC6
dir_pin: !PA14
enable_pin: !PC7
microsteps: 16
rotation_distance: 40
endstop_pin: !PC1
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 2
# endstop_pin: ^PC2
# position_endstop: 0
endstop_pin: probe:z_virtual_endstop
position_min: -0.5
position_max: 220

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD5
rotation_distance: 8
nozzle_diameter: 0.400
min_temp: 0
max_temp: 250
filament_diameter: 1.750
heater_pin: PC8
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA0
microsteps: 16

[filament_switch_sensor filament_sensor]
switch_pin: ^!PC15

[heater_bed]
heater_pin: PD8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 100

[fan]
max_power: 0.5 # the EBM Pabst is pretty strong
pin: PD2

[heater_fan fan1]
pin: PD3

[heater_fan fan2]
pin: PD4

[heater_fan SoC_fan]
pin: CB1:gpio79
# pin: RPI:gpio26


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD6,  EXP1_3=PB9,  EXP1_5=PA15, EXP1_7=PA9,   EXP1_9=<GND>,
    EXP1_2=PB8,  EXP1_4=PC3,  EXP1_6=PA10, EXP1_8=PB5,   EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PC11, EXP2_5=PC12, EXP2_7=PC13,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PA8,  EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PB12
run_current: 1.000
diag_pin:

[tmc2209 stepper_y]
uart_pin: PC10
run_current: 1.000
diag_pin:

[tmc2209 stepper_z]
uart_pin: PC9
run_current: 0.800
diag_pin:

[tmc2209 extruder]
uart_pin: PA13
run_current: 0.800
diag_pin:

[bltouch]
sensor_pin: PC14
control_pin: PA1

[adxl345]
cs_pin: PD9
spi_bus: spi1
axes_map: z,y,-x

# [neopixel rgb1]
# pin: PD0

[neopixel rgb2]
pin: PD1
chain_count: 35
# color_order: GRB

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.824
#*# pid_ki = 1.021
#*# pid_kd = 127.528
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.261
#*# pid_ki = 0.977
#*# pid_kd = 1192.868
#*#
#*# [bed_mesh Woohoo!]
#*# version = 1
#*# points =
#*# 	0.098750, 0.018750, -0.046875, -0.066250, -0.075625
#*# 	0.013125, -0.070000, -0.177500, -0.186250, -0.221250
#*# 	-0.025000, -0.138125, -0.250625, -0.304375, -0.348125
#*# 	-0.079375, -0.154375, -0.266875, -0.301250, -0.305625
#*# 	0.004375, -0.086250, -0.215625, -0.231250, -0.246875
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 180.0
#*# min_y = 10.0
#*# max_y = 210.0
#*#
#*# [bed_mesh 411]
#*# version = 1
#*# points =
#*# 	0.096875, 0.038125, -0.006250, -0.020625, -0.020625
#*# 	0.032500, -0.031875, -0.121250, -0.115625, -0.134375
#*# 	0.011875, -0.096250, -0.163750, -0.239375, -0.243750
#*# 	-0.019375, -0.094375, -0.183125, -0.216250, -0.210000
#*# 	0.051875, -0.008125, -0.128750, -0.134375, -0.173750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 180.0
#*# min_y = 10.0
#*# max_y = 210.0
#*#
#*# [bltouch]
#*# z_offset = 0.360
